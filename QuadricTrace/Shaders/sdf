
// Start of generated GLSL code

vec4 f0(vec3 p){
	vec4 r0 = mat4(mat3(1,-0,0,-0,1,-0,0,-0,1))*fm_sphere(p, 6);
	return r0;
}

vec4 f1(vec3 p){
	vec4 r0 = mat4(mat3(1,-0,0,-0,1,-0,0,-0,1))*fm_cylinderZ(p, 5.8);
	r0.w *= -1.f;
	return r0;
}

vec4 footmap(vec3 p)
{
	vec4 r0 = vec4(0);
	vec4 r1 = f0(p);
	vec4 r2 = f1(p);
	vec4 r3 = f1(p + r1.xyz);
	vec4 r4 = f0(p + r2.xyz);
	r0 = r1.w>r2.w ? r1 : r2;
	if(r0.w>0. && r3.w>0.00001 && r4.w>0.00001){
		r0.xyz += r1.w>r2.w ? r3.xyz : r4.xyz;
		r0.xyz += 0.5*(f0(p+r0.xyz).xyz + f1(p+r0.xyz).xyz);
		r0.xyz += 0.5*(f0(p+r0.xyz).xyz + f1(p+r0.xyz).xyz);
		r0.xyz += 0.5*(f0(p+r0.xyz).xyz + f1(p+r0.xyz).xyz);
		r0.xyz += 0.5*(f0(p+r0.xyz).xyz + f1(p+r0.xyz).xyz);
		r0.xyz += 0.5*(f0(p+r0.xyz).xyz + f1(p+r0.xyz).xyz);
	}
	r0.w = (r0.w<0.?-1.:1.) * length(r0.xyz);
	r0 -= 0.2 * vec4(normalize(r0.xyz),1); //offset
	return r0;
}
float SDF(vec3 p)
{
	vec4 m = footmap(p);
	return length(m.xyz)*(m.w>0.?1.:-1.);
}

// End of generated GLSL code
