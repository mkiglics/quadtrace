//?#version 450

//?#include "../SDF/SDFcommon.glsl"
//?#include "../Math/graphics.comp"
//?#include "../Math/distanceInterface.glsl"
//?#include "../Tracing/enhanced_sphere_trace.glsl"
//?#include "../Tracing/sphere_trace.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba32f, binding = 0) restrict readonly uniform image2D inDistance;
layout(binding = 1) restrict writeonly uniform image2D outColor;

void main()
{
	ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);
	ivec2 resolution = ivec2(gl_NumWorkGroups.xy * gl_WorkGroupSize.xy);
	RayCone raycone = Camera(pixel, resolution);

	DistanceField field = loadDistanceField(inDistance, pixel);
	raycone.ray.Tmin = field.dist;
	TraceResult result = enhancedSphereTrace(raycone.ray, SphereTraceDesc(0.001, 64));
	vec3 resultP = raycone.ray.P + raycone.ray.V * result.T;

	vec3 norm = computeGradient2(resultP);
	vec3 col = shadePointLight(resultP, norm,
						Material(vec3(0.5, 0.5, 0.8), 0.1, 1.5, 0.7),
						PointLight(vec3(2, 4, 2), vec3(60))
					);


//	col = vec3(result.flags/64.0);
	imageStore(outColor, pixel, vec4(clamp(col, vec3(0), vec3(1)), 1));
}
